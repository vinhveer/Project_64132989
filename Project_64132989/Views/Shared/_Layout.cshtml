<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
    @Scripts.Render("~/bundles/modernizr")
    <style>
        body {
            transition: background-color 0.3s, color 0.3s;
        }

        /* Navbar specific theming */
        .navbar {
            transition: background-color 0.3s;
        }

        .custom-btn {
            font-size: 0.875rem;
            box-shadow: rgba(50, 50, 93, 0.25) 0px 2px 5px -1px, rgba(0, 0, 0, 0.3) 0px 1px 3px -1px;
        }
    </style>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">
</head>
<body>
    <nav class="navbar navbar-expand-sm bg-body-tertiary shadow-sm fixed-top">
        <div class="container-fluid">
            <!-- Logo -->
            <a class="navbar-brand d-flex align-items-center" href="@Url.Action("Index", "Home64132989")">
                <img src="../../Assets/ntu.svg" alt="Logo" style="height: 2em; padding: 0">
                <p class="m-0 ms-2 fw-semibold">| NTU-UTMS</p>
            </a>

            <!-- Desktop Navigation -->
            <div class="d-none d-sm-flex flex-row align-items-center w-100">
                <ul class="navbar-nav me-auto">
                    @if (User.Identity.IsAuthenticated)
                    {
                        <li class="nav-item">
                            @Html.ActionLink("Cổng chứng thực", "Index", "Portal64132989", new { area = "" }, new { @class = "nav-link" })
                        </li>
                        <li class="nav-item">
                            @Html.ActionLink("Hồ sơ cá nhân", "Index", "Profiles64132989", new { area = "" }, new { @class = "nav-link" })
                        </li>
                    }
                </ul>

                <div class="d-flex align-items-center">
                    @if (User.Identity.IsAuthenticated)
                    {
                        <span class="me-3">Xin chào, <strong>@User.Identity.Name</strong></span>
                        <a href="@Url.Action("Direct", "Login64132989", new { area = "" })" class="btn btn-secondary me-2">
                            <i class="bi bi-speedometer2 me-2"></i> Vào bảng điều khiển
                        </a>
                        <a href="@Url.Action("Logout", "Login64132989", new { area = "" })" class="btn btn-outline-danger">
                            <i class="bi bi-box-arrow-right me-2"></i> Đăng xuất
                        </a>
                    }
                    else
                    {
                        <a href="@Url.Action("Index", "Login64132989", new { area = "" })" class="btn btn-outline-primary">
                            <i class="bi bi-box-arrow-in-right me-2"></i> Đăng nhập
                        </a>
                    }

                    <div class="ms-3">
                        <button class="btn btn-secondary" id="theme-toggle">
                            <i class="bi bi-moon" id="theme-icon"></i>
                        </button>
                    </div>
                </div>
            </div>

            <!-- Mobile Buttons -->
            <div class="d-sm-none d-flex align-items-center">
                @if (User.Identity.IsAuthenticated)
                {
                    <button class="navbar-toggler" type="button" data-bs-toggle="offcanvas" data-bs-target="#offcanvasNavbar" aria-controls="offcanvasNavbar" aria-label="Toggle navigation">
                        <span class="navbar-toggler-icon"></span>
                    </button>
                    <div class="ms-3">
                        <button class="btn btn-secondary" id="theme-toggle-mobile">
                            <i class="bi bi-moon" id="theme-icon"></i>
                        </button>
                    </div>
                }
                else
                {
                    <!-- Mobile: Nút Login -->
                    <a href="@Url.Action("Index", "Login64132989", new { area = "" })" class="btn btn-outline-primary">
                        <i class="bi bi-box-arrow-in-right"></i> Đăng nhập
                    </a>
                }
            </div>


            <!-- Offcanvas Menu (Mobile) -->
            <div class="d-sm-none offcanvas offcanvas-end" tabindex="-1" id="offcanvasNavbar" aria-labelledby="offcanvasNavbarLabel">
                <div class="offcanvas-header">
                    <h5 class="offcanvas-title" id="offcanvasNavbarLabel">Menu</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="offcanvas" aria-label="Close"></button>
                </div>
                <div class="offcanvas-body d-flex flex-column">
                    <ul class="navbar-nav flex-grow-1">
                        @if (User.Identity.IsAuthenticated)
                        {
                            <li>@Html.ActionLink("Hashing", "Hash", "Home64132989", new { area = "" }, new { @class = "nav-link" })</li>
                            <li>@Html.ActionLink("Cổng chứng thực", "Index", "Portal64132989", new { area = "" }, new { @class = "nav-link" })</li>
                        }
                    </ul>
                    <div class="mt-auto">
                        @if (User.Identity.IsAuthenticated)
                        {
                            <div class="alert alert-success mb-2">Xin chào, <strong>@User.Identity.Name</strong></div>
                            <a href="@Url.Action("Logout", "Login64132989", new { area = "" })" class="btn btn-outline-danger w-100">
                                <i class="bi bi-box-arrow-right me-2"></i> Đăng xuất
                            </a>
                        }
                        else
                        {
                            <a href="@Url.Action("Index", "Login64132989", new { area = "" })" class="btn btn-outline-primary w-100">
                                <i class="bi bi-box-arrow-in-right me-2"></i> Đăng nhập
                            </a>
                        }
                    </div>
                </div>
            </div>
        </div>
    </nav>

    <div class="mt-5 pt-5">
        @RenderBody()
    </div>

    <footer class="container mt-4">
        <hr />
        <p>&copy; @DateTime.Now.Year - NTU_UTMS</p>
    </footer>

    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/bootstrap")
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/2.9.2/umd/popper.min.js" integrity="sha512-2rNj2KJ+D8s1ceNasTIex6z4HWyOnEYLVC3FigGOmyQCZc2eBXKgOxQmo3oKLHyfcj53uz4QMsRCWNbLd32Q1g==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    <script>
        // Theme Toggle Functionality
        const htmlTag = document.documentElement;
        const themeToggles = [
            { toggle: document.getElementById('theme-toggle'), icon: document.getElementById('theme-icon') },
            { toggle: document.getElementById('theme-toggle-mobile'), icon: document.getElementById('theme-icon-mobile') }
        ];

        function saveTheme(theme) {
            localStorage.setItem('theme', theme);
        }

        function getSavedTheme() {
            return localStorage.getItem('theme') || 'light';
        }

        function applyTheme(theme) {
            // Ensure theme is either 'light' or 'dark'
            theme = theme === 'dark' ? 'dark' : 'light';

            // Set theme on HTML tag
            htmlTag.setAttribute('data-bs-theme', theme);

            // Update both toggle icons
            themeToggles.forEach(({ icon }) => {
                if (theme === 'dark') {
                    icon.classList.remove('bi-moon');
                    icon.classList.add('bi-sun');
                } else {
                    icon.classList.remove('bi-sun');
                    icon.classList.add('bi-moon');
                }
            });
        }

        // Initialize theme on page load
        document.addEventListener('DOMContentLoaded', () => {
            const savedTheme = getSavedTheme();
            applyTheme(savedTheme);
        });

        // Add click event to both theme toggles
        themeToggles.forEach(({ toggle, icon }) => {
            if (toggle) {
                toggle.addEventListener('click', () => {
                    const currentTheme = htmlTag.getAttribute('data-bs-theme');
                    const newTheme = currentTheme === 'light' ? 'dark' : 'light';

                    applyTheme(newTheme);
                    saveTheme(newTheme);
                });
            }
        });

        // Active state for navbar links
        const navbarLinks = document.querySelectorAll('.navbar-nav a');
        navbarLinks.forEach(link => {
            link.addEventListener('click', () => {
                navbarLinks.forEach(l => l.classList.remove('active'));
                link.classList.add('active');
            });
        });
    </script>
    @RenderSection("scripts", required: false)
</body>
</html>